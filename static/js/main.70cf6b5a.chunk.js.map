{"version":3,"sources":["components/Dashboard.tsx","components/AddBook.tsx","App.tsx","index.tsx"],"names":["Dashboard","useState","books","setBooks","filter","setFilter","navigate","useNavigate","handleEditClick","bookId","formatDateTime","dateTime","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","format","Date","useEffect","fetch","then","response","json","data","catch","error","console","updateBookStatus","isActive","book","updatedBooks","map","id","active","find","method","headers","body","JSON","stringify","ok","Error","prevBooks","prevBook","deleteBook","removeBook","filteredBooks","numberOfRecordsShowing","length","totalNumberOfRecords","className","htmlFor","value","onChange","e","target","to","title","author","category","isbn","createdAt","modifiedAt","type","onClick","bind","disabled","href","rel","AddBook","useParams","bookData","setBookData","errors","setErrors","successMessage","setSuccessMessage","errorMessage","setErrorMessage","a","fetchBookData","handleInputChange","name","prevData","onSubmit","preventDefault","formErrors","Object","keys","validateForm","message","required","App","path","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70cf6b5a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './Dashboard.scss';\n\ninterface Book {\n  active: boolean;\n  id: number;\n  title: string;\n  author: string;\n  category: string;\n  isbn: string;\n  createdAt: string;\n  modifiedAt: string;\n}\n\nexport const Dashboard: React.FC = () => {\n  const [books, setBooks] = useState<Book[]>([]);\n  const [filter, setFilter] = useState('Show Active');\n  const navigate = useNavigate();\n\n  const handleEditClick = (bookId: number) => {\n    navigate(`/add-book/${bookId}`);\n  };\n\n  useEffect(() => {\n    fetch('http://localhost:3000/books')\n      .then(response => response.json())\n      .then(data => setBooks(data))\n      // eslint-disable-next-line no-console\n      .catch(error => console.error(error));\n  }, []);\n\n  function formatDateTime(dateTime: string): string {\n    const options: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true,\n    };\n    const formattedDate: string = new Intl.DateTimeFormat('en-US', options).format(new Date(dateTime));\n\n    return formattedDate;\n  }\n\n  const updateBook = (book: Book) => {\n    fetch(`http://localhost:3000/books/${book.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(book),\n    })\n      .then(response => {\n        if (response.ok) {\n          setBooks(prevBooks => prevBooks\n            .map(prevBook => (prevBook.id === book.id ? book : prevBook)));\n        } else {\n          throw new Error('Помилка при оновленні книги');\n        }\n      })\n      .catch(error => error);\n  };\n\n  const updateBookStatus = (bookId: number, isActive: boolean) => {\n    const updatedBooks = books\n      .map(book => (book.id === bookId ? { ...book, active: isActive } : book));\n\n    setBooks(updatedBooks);\n    updateBook(updatedBooks.find(book => book.id === bookId) as Book);\n  };\n\n  const deactivateBook = (bookId: number) => {\n    updateBookStatus(bookId, false);\n  };\n\n  const activateBook = (bookId: number) => {\n    updateBookStatus(bookId, true);\n  };\n\n  const removeBook = (bookId: number, updatedBooks: Book[]) => {\n    fetch(`http://localhost:3000/books/${bookId}`, {\n      method: 'DELETE',\n    })\n      .then(response => {\n        if (response.ok) {\n          setBooks(updatedBooks);\n        } else {\n          throw new Error('Помилка при видаленні книги');\n        }\n      })\n      .catch(error => (error));\n  };\n\n  const deleteBook = (bookId: number) => {\n    const updatedBooks = books.filter(book => book.id !== bookId);\n\n    removeBook(bookId, updatedBooks);\n  };\n\n  const filteredBooks = (): Book[] => {\n    switch (filter) {\n      case 'Show All':\n        return books;\n      case 'Show Active':\n        return books.filter(book => book.active);\n      case 'Show Deactivated':\n        return books.filter(book => !book.active);\n      default:\n        return books;\n    }\n  };\n\n  const numberOfRecordsShowing = filteredBooks().length;\n  const totalNumberOfRecords = books.length;\n\n  return (\n    <>\n      <div className=\"header\">\n        <label htmlFor=\"filter\" className=\"header__filter\">\n          Filter:\n          {' '}\n          <select id=\"filter\" className=\"header__filterSelect\" value={filter} onChange={(e) => setFilter(e.target.value)}>\n            <option value=\"Show All\">Show All</option>\n            <option value=\"Show Active\">Show Active</option>\n            <option value=\"Show Deactivated\">Show Deactivated</option>\n          </select>\n        </label>\n        <span className=\"record-info\">\n          Showing\n          {' '}\n          {numberOfRecordsShowing}\n          {' '}\n          of\n          {' '}\n          {totalNumberOfRecords}\n        </span>\n      </div>\n      <div className=\"centeredContainer\">\n        <Link to=\"/add-book\" className=\"addBookLink\">Add a Book</Link>\n      </div>\n      <table className=\"bookTable\">\n        <thead>\n          <tr>\n            <th>Book title</th>\n            <th>Author name</th>\n            <th>Category</th>\n            <th>ISBN</th>\n            <th>Created At</th>\n            <th>Modified/Edited At</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredBooks().map(book => (\n            <tr key={book.id} className={book.active ? '' : 'deactivated'}>\n              <td>{book.title}</td>\n              <td>{book.author}</td>\n              <td>{book.category}</td>\n              <td>{book.isbn}</td>\n              <td>{formatDateTime(book.createdAt)}</td>\n              <td>{formatDateTime(book.modifiedAt)}</td>\n              <td>\n                <button type=\"button\" onClick={handleEditClick.bind(null, book.id)}>Edit</button>\n\n                {book.active && (\n                  <>\n                    <button type=\"button\" onClick={() => deactivateBook(book.id)}>Deactivate</button>\n                    <button type=\"button\" disabled>Delete</button>\n                  </>\n                )}\n                {!book.active && (\n                  <>\n                    <button type=\"button\" onClick={() => activateBook(book.id)}>Activate</button>\n                    <button type=\"button\" onClick={() => deleteBook(book.id)}>Delete</button>\n                  </>\n                )}\n                {book.active ? 'Deactivate' : 'Re-Activate'}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <footer className=\"footer\">\n        <a href=\"https://github.com/11Olya112\" target=\"_blank\" className=\"footer__link\" rel=\"noreferrer\">\n          Visit my GitHub\n        </a>\n      </footer>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './AddBook.scss';\n\ninterface Book {\n  title: string;\n  author: string;\n  category: string;\n  isbn: string;\n}\n\nexport const AddBook: React.FC = () => {\n  const navigate = useNavigate();\n  const { bookId } = useParams<{ bookId: string }>();\n\n  const [bookData, setBookData] = useState<Book>({\n    title: '',\n    author: '',\n    category: '',\n    isbn: '',\n  });\n\n  const [errors, setErrors] = useState<Partial<Book>>({});\n  const [successMessage, setSuccessMessage] = useState<string>('');\n  const [errorMessage, setErrorMessage] = useState<string>('');\n\n  useEffect(() => {\n    const fetchBookData = async () => {\n      try {\n        const response = await fetch(`/api/books/${bookId}`);\n\n        if (response.ok) {\n          const {\n            title, author, category, isbn,\n          } = await response.json();\n\n          setBookData({\n            title, author, category, isbn,\n          });\n        } else {\n          throw new Error('Failed to fetch book data.');\n        }\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error(error);\n      }\n    };\n\n    if (bookId) {\n      fetchBookData();\n    }\n  }, [bookId]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n\n    setBookData((prevData: Book) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const validateForm = (): boolean => {\n    const formErrors: Partial<Book> = {};\n\n    if (!bookData.title) {\n      formErrors.title = 'Title is required';\n    }\n\n    if (!bookData.author) {\n      formErrors.author = 'Author is required';\n    }\n\n    if (!bookData.category) {\n      formErrors.category = 'Category is required';\n    }\n\n    if (!bookData.isbn) {\n      formErrors.isbn = 'ISBN is required';\n    }\n\n    setErrors(formErrors);\n\n    return Object.keys(formErrors).length === 0;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (validateForm()) {\n      fetch('http://localhost:3000/books', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(bookData),\n      })\n        .then((response) => {\n          if (response.ok) {\n            setSuccessMessage('Book added successfully!');\n            navigate('/');\n          } else {\n            setErrorMessage('Failed to add book.');\n          }\n        })\n        .catch((error) => {\n          setErrorMessage(error.message || 'An error occurred. Please try again.');\n        });\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className=\"bookForm\">\n        <div className=\"bookForm__group\">\n          <label htmlFor=\"title\" className=\"bookForm__label\">\n            Book title:\n            {' '}\n            <input\n              type=\"text\"\n              id=\"title\"\n              name=\"title\"\n              value={bookData.title}\n              required\n              onChange={handleInputChange}\n              className=\"bookForm__input\"\n            />\n            {errors.title && <span className=\"bookForm__error\">{errors.title}</span>}\n          </label>\n        </div>\n        <div className=\"bookForm__group\">\n          <label htmlFor=\"author\" className=\"bookForm__label\">\n            Author name:\n            {' '}\n            <input\n              type=\"text\"\n              id=\"author\"\n              name=\"author\"\n              value={bookData.author}\n              required\n              onChange={handleInputChange}\n              className=\"bookForm__input\"\n            />\n            {errors.author && <span className=\"bookForm__error\">{errors.author}</span>}\n          </label>\n        </div>\n        <div className=\"bookForm__group\">\n          <label htmlFor=\"category\" className=\"bookForm__label\">\n            Category:\n            {' '}\n            <select\n              id=\"category\"\n              name=\"category\"\n              value={bookData.category}\n              required\n              onChange={handleInputChange}\n              className=\"bookForm__input\"\n            >\n              <option value=\"\">Select category</option>\n              <option value=\"Fiction\">Fiction</option>\n              <option value=\"Non-fiction\">Non-fiction</option>\n              <option value=\"Sci-Fi\">Sci-Fi</option>\n            </select>\n            {errors.category && <span className=\"bookForm__error\">{errors.category}</span>}\n          </label>\n        </div>\n        <div className=\"bookForm__group\">\n          <label htmlFor=\"isbn\" className=\"bookForm__label\">\n            ISBN:\n            {' '}\n            <input\n              type=\"number\"\n              id=\"isbn\"\n              name=\"isbn\"\n              value={bookData.isbn}\n              required\n              onChange={handleInputChange}\n              className=\"bookForm__input\"\n            />\n            {errors.isbn && <span className=\"bookForm__error\">{errors.isbn}</span>}\n          </label>\n        </div>\n        <button type=\"submit\" className=\"bookForm__button\">Add a Book</button>\n      </form>\n\n      {successMessage && <p>Book added successfully!</p>}\n      {errorMessage && <p>{errorMessage}</p>}\n\n    </div>\n  );\n};\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport './App.scss';\nimport { Dashboard } from './components/Dashboard';\nimport { AddBook } from './components/AddBook';\n\nexport const App: React.FC = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" Component={Dashboard} />\n      <Route path=\"/add-book\" Component={AddBook} />\n      <Route path=\"/add-book/:bookId\" Component={AddBook} />\n    </Routes>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}